<Activity mc:Ignorable="sap sap2010" x:Class="Process" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Transaction item to be processed." Name="in_TransactionItem" Type="InArgument(ui:QueueItem)" />
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_dicLanguage" Type="InArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property Name="in_TransactionID" Type="InArgument(x:String)" />
    <x:Property Name="io_dicBotReadyConfig" Type="InOutArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="io_dicTransactionData" Type="InOutArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="io_exBRE" Type="InOutArgument(ui:BusinessRuleException)" />
    <x:Property Name="in_intRetryNumber" Type="InArgument(x:Int32)" />
    <x:Property Name="io_exSystemError" Type="InOutArgument(s:Exception)" />
    <x:Property Name="in_dicKeysMap" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="io_drCurrentRow" Type="InOutArgument(sd:DataRow)" />
    <x:Property Name="in_BrowserInstance" Type="InArgument(ui:UiElement)" />
    <x:Property Name="in_strExcelInputFileFullName" Type="InArgument(x:String)" />
    <x:Property Name="in_TransactionNumber" Type="InArgument(x:Int32)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>919,2525</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ProcessTransaction_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="56">
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">False</x:Boolean>
      <x:Boolean x:Key="ShouldCollapseAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence sap2010:Annotation.AnnotationText="Invoke major steps of the business process, which are usually implemented by multiple subworkflows.&#xA;&#xA;If a BusinessRuleException is thrown, the transaction is skipped. &#xA;If another kind of exception occurs, the current transaction can be retried. " DisplayName="Process" sap:VirtualizedContainerService.HintSize="630,2460" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="Process" sap:VirtualizedContainerService.HintSize="568,2277" sap2010:WorkflowViewState.IdRef="TryCatch_6">
      <TryCatch.Variables>
        <Variable x:TypeArguments="x:String" Name="strCurrentProductPrice" />
        <Variable x:TypeArguments="x:String" Name="strCurrentProductDetail" />
      </TryCatch.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsPinned">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <Sequence DisplayName="Try Process" sap:VirtualizedContainerService.HintSize="450,471" sap2010:WorkflowViewState.IdRef="Sequence_10">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:Comment DisplayName="Comment - Note" sap:VirtualizedContainerService.HintSize="388,75" sap2010:WorkflowViewState.IdRef="Comment_1" Text="// by default the following activity shows the value of the variable 'in_TransactionID'" />
          <ui:LogMessage DisplayName="Log Message - Start" sap:VirtualizedContainerService.HintSize="388,92" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[String.Format(in_dicLanguage(&quot;ProcessStart&quot;),in_TransactionID,in_intRetryNumber.ToString)]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsPinned">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:LogMessage>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke - ProcessParallel" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="ProcessParallel.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_TransactionID">[in_TransactionID]</InArgument>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_dicLanguage">[in_dicLanguage]</InArgument>
              <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="io_dicTransactionData">[io_dicTransactionData]</InOutArgument>
              <InArgument x:TypeArguments="x:Int32" x:Key="in_intRetryNumber">[in_intRetryNumber]</InArgument>
              <InOutArgument x:TypeArguments="sd:DataRow" x:Key="io_drCurrentRow">[io_drCurrentRow]</InOutArgument>
              <InArgument x:TypeArguments="ui:UiElement" x:Key="in_BrowserInstance">[in_BrowserInstance]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_strExcelInputFileFullName">[in_strExcelInputFileFullName]</InArgument>
              <InArgument x:TypeArguments="x:Int32" x:Key="in_TransactionNumber">[in_TransactionNumber]</InArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_CurrentProductPrice">[strCurrentProductPrice]</OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_CurrentProductDetail">[strCurrentProductDetail]</OutArgument>
            </ui:InvokeWorkflowFile.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsPinned">True</x:Boolean>
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeWorkflowFile>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="534,21" sap2010:WorkflowViewState.IdRef="Catch`1_5">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Exception" sap:VirtualizedContainerService.HintSize="450,81" sap2010:WorkflowViewState.IdRef="Sequence_11">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message Error" sap:VirtualizedContainerService.HintSize="534,92" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Error" Message="[String.Format(in_dicLanguage(&quot;ProcessError&quot;), in_TransactionID.ToString,exception.Message,exception.Source)]" />
              <Assign DisplayName="Assign - System Error" sap:VirtualizedContainerService.HintSize="534,82" sap2010:WorkflowViewState.IdRef="Assign_17">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:Exception">[io_exSystemError]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                </Assign.Value>
              </Assign>
              <TryCatch DisplayName="Try catch - TakeScreenshot" sap:VirtualizedContainerService.HintSize="534,940" sap2010:WorkflowViewState.IdRef="TryCatch_7">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <TryCatch.Try>
                  <Sequence DisplayName="Try" sap:VirtualizedContainerService.HintSize="496,468" sap2010:WorkflowViewState.IdRef="Sequence_20">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="strPathScreenshot" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign - Screenshot Path" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_42">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strPathScreenshot]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[New FileInfo(String.Format(in_Config("ExceptionPath").ToString,Now.ToString(in_Config("ExceptionDateFormat").ToString))).FullName]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke - TakeScreenshot" sap:VirtualizedContainerService.HintSize="434,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_13" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="fwk\fwk_TakeScreenshot.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="in_strSelector">[String.Empty]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_strFilePath">[strPathScreenshot]</InArgument>
                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_dicLanguage">[in_dicLanguage]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <Assign DisplayName="Assign path to exception" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_43">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[io_exSystemError.Data(in_Config("ExScreenshotKey").ToString)]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">[strPathScreenshot]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="500,161" sap2010:WorkflowViewState.IdRef="Catch`1_8">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                      </ActivityAction.Argument>
                      <ui:LogMessage DisplayName="Log message - Exception" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Warn" Message="[String.Format(in_dicLanguage(&quot;TakeScreenshotError&quot;),exception.Message,exception.Source)]" />
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
            </Sequence>
          </ActivityAction>
        </Catch>
        <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="534,21" sap2010:WorkflowViewState.IdRef="Catch`1_6">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="ui:BusinessRuleException">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="bre" />
            </ActivityAction.Argument>
            <Sequence DisplayName="BusinessRuleException" sap:VirtualizedContainerService.HintSize="450,81" sap2010:WorkflowViewState.IdRef="Sequence_12">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message BRE" sap:VirtualizedContainerService.HintSize="388,92" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Warn" Message="[bre.Message]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:LogMessage>
              <If Condition="[io_exSystemError isnot nothing]" DisplayName="If system error is not nothing" sap:VirtualizedContainerService.HintSize="388,182" sap2010:WorkflowViewState.IdRef="If_3">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Assign DisplayName="Assign - Business Rule Exception" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_37">
                    <Assign.To>
                      <OutArgument x:TypeArguments="ui:BusinessRuleException">[io_exBRE]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="ui:BusinessRuleException">[nothing]</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Then>
                <If.Else>
                  <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="431,163" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
                    <ui:MultipleAssign.AssignOperations>
                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[strCurrentProductPrice]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">-</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[strCurrentProductDetail]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">-</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="ui:BusinessRuleException">[io_exBRE]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="ui:BusinessRuleException">[bre]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                      </scg:List>
                    </ui:MultipleAssign.AssignOperations>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:MultipleAssign>
                </If.Else>
              </If>
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
      <TryCatch.Finally>
        <Sequence DisplayName="Finally" sap:VirtualizedContainerService.HintSize="530,2027" sap2010:WorkflowViewState.IdRef="Sequence_17">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message - End" sap:VirtualizedContainerService.HintSize="468,52" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Info" Message="[String.Format(in_dicLanguage(&quot;ProcessEnd&quot;),in_TransactionID.ToString)]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:LogMessage>
          <If Condition="[io_dicTransactionData.ContainsKey(&quot;ProcessResult&quot;)  andalso String.IsNullOrEmpty(io_dicTransactionData(&quot;ProcessResult&quot;).ToString)]" DisplayName="If io_dicTransactionData(&quot;result&quot;) is empty" sap:VirtualizedContainerService.HintSize="468,344" sap2010:WorkflowViewState.IdRef="If_4">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Assign DisplayName="Assign system error = empty result " sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_38">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:Exception">[io_exSystemError]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:Exception">[new Exception(in_dicLanguage("EmptyResult"))]</InArgument>
                </Assign.Value>
              </Assign>
            </If.Then>
            <If.Else>
              <Sequence DisplayName="" sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_25">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Sequence>
            </If.Else>
          </If>
          <Assign DisplayName="Assign ProcessResult case not exists" sap:VirtualizedContainerService.HintSize="468,82" sap2010:WorkflowViewState.IdRef="Assign_48">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Object">[io_dicTransactionData("ProcessResult")]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Object">[If(io_dicTransactionData.ContainsKey("ProcessResult"),io_dicTransactionData("ProcessResult"), String.Empty)]</InArgument>
            </Assign.Value>
          </Assign>
          <If Condition="[io_exSystemError isnot Nothing andalso Cint(in_Config(&quot;UserFriendlySE&quot;)) = 1]" DisplayName="Enabled User Friendly SE message?" sap:VirtualizedContainerService.HintSize="468,262" sap2010:WorkflowViewState.IdRef="If_10">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence DisplayName="User Friendly SE" sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_24">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="User Friendly Log" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="LogMessage_18" Level="Info" Message="[in_dicLanguage(&quot;UserFriendlySEEnable&quot;).ToString]" />
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke to UserFriendlySE" sap:VirtualizedContainerService.HintSize="334,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_16" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="fwk\fwk_UserFriendlySE.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_dicLanguage">[in_dicLanguage]</InArgument>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                    <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="io_dicTransactionData">[io_dicTransactionData]</InOutArgument>
                    <InOutArgument x:TypeArguments="s:Exception" x:Key="io_exSystemError">[io_exSystemError]</InOutArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_23">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Sequence>
            </If.Else>
          </If>
          <Assign DisplayName="Assign status" sap:VirtualizedContainerService.HintSize="468,83" sap2010:WorkflowViewState.IdRef="Assign_27">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Object">[io_dicTransactionData("ProcessStatus")]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Object" xml:space="preserve">[If(io_exSystemError IsNot Nothing, in_dicLanguage("ErrorWord"), _ 
If(io_exBRE IsNot Nothing , If(io_dicTransactionData.ContainsKey("ProcessStatus"),io_dicTransactionData("ProcessStatus").ToString,in_dicLanguage("ManualProcessingWord")), _ 
in_dicLanguage("ProcessedWord")))]</InArgument>
            </Assign.Value>
          </Assign>
          <If Condition="[CInt(in_Config(&quot;InputMode&quot;))=2]" DisplayName="If inputmode = 2 (excel input)" sap:VirtualizedContainerService.HintSize="468,407" sap2010:WorkflowViewState.IdRef="If_7">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="431,225" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
                <ui:MultipleAssign.AssignOperations>
                  <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:Object">[io_drCurrentRow(in_Config("ItemStatusColumn").ToString)]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:Object">[io_dicTransactionData("ProcessStatus")]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:Object">[io_drCurrentRow(in_Config("InputPriceColumn").ToString)]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:Object">[strCurrentProductPrice]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:Object">[io_drCurrentRow(in_Config("InputDetailColumn").ToString)]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:Object">[strCurrentProductDetail]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:Object">[io_drCurrentRow(in_Config("DateTransactionColumn").ToString)]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:Object">[io_dicTransactionData("TransactionExecutionDate")]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:Object">[io_drCurrentRow(in_Config("ProcessResultColumn").ToString)]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:Object">[io_dicTransactionData("ProcessResult")]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                  </scg:List>
                </ui:MultipleAssign.AssignOperations>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:MultipleAssign>
            </If.Then>
            <If.Else>
              <Sequence DisplayName="" sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_27">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Sequence>
            </If.Else>
          </If>
          <TryCatch DisplayName="add detail - botready" sap:VirtualizedContainerService.HintSize="468,52" sap2010:WorkflowViewState.IdRef="TryCatch_4">
            <TryCatch.Variables>
              <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="dicBotreadyDetail" />
              <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="dicOrderedBotreadyDetail" />
            </TryCatch.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <TryCatch.Try>
              <Flowchart DisplayName="generate and add detail and aditional data" sap:VirtualizedContainerService.HintSize="774,889" sap2010:WorkflowViewState.IdRef="Flowchart_2">
                <Flowchart.Variables>
                  <Variable x:TypeArguments="x:Boolean" Name="bIsError" />
                </Flowchart.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <av:Point x:Key="ShapeLocation">490,2.66666666666666</av:Point>
                    <av:Size x:Key="ShapeSize">60,75</av:Size>
                    <av:PointCollection x:Key="ConnectorLocation">520,77.66666666666666 520,127.66666666666666</av:PointCollection>
                    <x:Double x:Key="Height">852</x:Double>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Double x:Key="Width">740</x:Double>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Flowchart.StartNode>
                  <x:Reference>__ReferenceID6</x:Reference>
                </Flowchart.StartNode>
                <FlowDecision x:Name="__ReferenceID1" Condition="[bIsError]" DisplayName="Error?" sap:VirtualizedContainerService.HintSize="70,87" sap2010:WorkflowViewState.IdRef="FlowDecision_2">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <av:Point x:Key="ShapeLocation">380.895,644</av:Point>
                      <av:Size x:Key="ShapeSize">70,87</av:Size>
                      <av:PointCollection x:Key="TrueConnector">380.895,687.5 217,687.5 217,760</av:PointCollection>
                      <av:PointCollection x:Key="FalseConnector">450.895,687.5 614,687.5 614,775</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <FlowDecision.True>
                    <FlowStep x:Name="__ReferenceID3" sap2010:WorkflowViewState.IdRef="FlowStep_4">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">0,760</av:Point>
                          <av:Size x:Key="ShapeSize">434,82</av:Size>
                          <av:PointCollection x:Key="ConnectorLocation">434,801 514,801</av:PointCollection>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign DisplayName="Assign message error" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_25">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[dicOrderedBotreadyDetail("ErrorDetails")]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[if ((io_exBRE IsNot Nothing), io_exBRE.Message, io_exSystemError.Message)]</InArgument>
                        </Assign.Value>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Assign>
                      <FlowStep.Next>
                        <FlowStep x:Name="__ReferenceID0" sap2010:WorkflowViewState.IdRef="FlowStep_5">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:Point x:Key="ShapeLocation">514,775</av:Point>
                              <av:Size x:Key="ShapeSize">200,52</av:Size>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="BotReady\BotReady_AddDetail.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_17" UnSafe="False" WorkflowFileName="BotReady\BotReady_AddDetail.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="io_dicBotReadyData">[io_dicBotReadyConfig]</InOutArgument>
                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_dicLanguage">[in_dicLanguage]</InArgument>
                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_TransactionDetail">[dicOrderedBotreadyDetail]</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:InvokeWorkflowFile>
                        </FlowStep>
                      </FlowStep.Next>
                    </FlowStep>
                  </FlowDecision.True>
                  <FlowDecision.False>
                    <x:Reference>__ReferenceID0</x:Reference>
                  </FlowDecision.False>
                </FlowDecision>
                <FlowStep x:Name="__ReferenceID4" sap2010:WorkflowViewState.IdRef="FlowStep_2">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">315.895,382</av:Point>
                      <av:Size x:Key="ShapeSize">200,81</av:Size>
                      <av:PointCollection x:Key="ConnectorLocation">415.895,463 415.895,513</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Sequence DisplayName="initialize values" sap:VirtualizedContainerService.HintSize="200,81" sap2010:WorkflowViewState.IdRef="Sequence_13">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign - transaction success" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_47">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[io_dicBotReadyConfig("TransactionSuccess")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">[not bIsError]</InArgument>
                      </Assign.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Assign>
                    <Assign DisplayName="initialize - dicBotreadyDetail" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_20">
                      <Assign.To>
                        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[dicBotreadyDetail]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[new Dictionary(Of String, String)]</InArgument>
                      </Assign.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Assign>
                  </Sequence>
                  <FlowStep.Next>
                    <FlowStep x:Name="__ReferenceID2" sap2010:WorkflowViewState.IdRef="FlowStep_3">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">315.895,513</av:Point>
                          <av:Size x:Key="ShapeSize">200,81</av:Size>
                          <av:PointCollection x:Key="ConnectorLocation">415.895,594 415.895,644</av:PointCollection>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Sequence DisplayName="assign common  values" sap:VirtualizedContainerService.HintSize="200,81" sap2010:WorkflowViewState.IdRef="Sequence_14">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:Int32" Name="intIndex" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="get key values pair from transaction item" sap:VirtualizedContainerService.HintSize="434,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Utils\Utils_GetDictionayFromAnotherOne.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_dicLanguage">[in_dicLanguage]</InArgument>
                            <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="io_dicOutDictionary">[dicBotreadyDetail]</InOutArgument>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_dicDictionaryToFilterAndAppend">[in_TransactionItem.SpecificContent]</InArgument>
                            <InArgument x:TypeArguments="s:String[]" x:Key="in_arrToFilter">[in_Config("KeysOfTransactionItemToBotReady").ToString.Split(New String() {","}, StringSplitOptions.RemoveEmptyEntries).Select(Function(strItem) strItem.Trim).ToArray]</InArgument>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_dicKeysMap">[in_dicKeysMap]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="get key values pair from transaction data" sap:VirtualizedContainerService.HintSize="434,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Utils\Utils_GetDictionayFromAnotherOne.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_dicLanguage">[in_dicLanguage]</InArgument>
                            <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="io_dicOutDictionary">[dicBotreadyDetail]</InOutArgument>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_dicDictionaryToFilterAndAppend">[io_dicTransactionData]</InArgument>
                            <InArgument x:TypeArguments="s:String[]" x:Key="in_arrToFilter">[in_Config("KeysOfTransactionDataToBotReady").ToString.Split(New String() {","}, StringSplitOptions.RemoveEmptyEntries).Select(Function(strItem) strItem.Trim).ToArray]</InArgument>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_dicKeysMap">[in_dicKeysMap]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <Assign DisplayName="initialize orderer botready dic" sap:VirtualizedContainerService.HintSize="434,61" sap2010:WorkflowViewState.IdRef="Assign_45">
                          <Assign.To>
                            <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[dicOrderedBotreadyDetail]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[new Dictionary(Of String, String)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each - OrderedBotReadyColumns" sap:VirtualizedContainerService.HintSize="434,501" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[in_Config(&quot;OrderedBotReadyColumns&quot;).ToString.Split(&quot;,&quot;c).Select(Function(strItem) strItem.Trim).ToArray]">
                          <ui:ForEach.Body>
                            <ActivityAction x:TypeArguments="x:String">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="x:String" Name="strKey" />
                              </ActivityAction.Argument>
                              <If Condition="[not String.IsNullOrEmpty(dicBotreadyDetail(if(in_dicKeysMap.ContainsKey(strKey),in_dicKeysMap(strKey).ToString,strKey))) or cint(in_Config(&quot;ShowEmptyValues&quot;))=1]" DisplayName="has value or is configured tu show the empty values?" sap:VirtualizedContainerService.HintSize="340,376" sap2010:WorkflowViewState.IdRef="If_11">
                                <If.Then>
                                  <Assign DisplayName="Assign orderer key" sap:VirtualizedContainerService.HintSize="262,61" sap2010:WorkflowViewState.IdRef="Assign_44">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[dicOrderedBotreadyDetail(if(in_dicKeysMap.ContainsKey(strKey),in_dicKeysMap(strKey).ToString,strKey))]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[dicBotreadyDetail(if(in_dicKeysMap.ContainsKey(strKey),in_dicKeysMap(strKey).ToString,strKey))]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </If.Then>
                              </If>
                            </ActivityAction>
                          </ui:ForEach.Body>
                        </ui:ForEach>
                        <Assign DisplayName="initialize orderer botready dic for execution detail" sap:VirtualizedContainerService.HintSize="434,61" sap2010:WorkflowViewState.IdRef="Assign_49">
                          <Assign.To>
                            <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[dicBotreadyDetail]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[new Dictionary(Of String, String)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="get key values pair from transaction item for execution detail" sap:VirtualizedContainerService.HintSize="434,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_14" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Utils\Utils_GetDictionayFromAnotherOne.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_dicLanguage">[in_dicLanguage]</InArgument>
                            <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="io_dicOutDictionary">[dicBotreadyDetail]</InOutArgument>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_dicDictionaryToFilterAndAppend">[in_TransactionItem.SpecificContent]</InArgument>
                            <InArgument x:TypeArguments="s:String[]" x:Key="in_arrToFilter">[in_Config("KeysOfTransactionItemToBotReadyDetail").ToString.Split(New String() {","}, StringSplitOptions.RemoveEmptyEntries).Select(Function(strItem) strItem.Trim).ToArray]</InArgument>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_dicKeysMap">[in_dicKeysMap]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="get key values pair from transaction data for execution detail" sap:VirtualizedContainerService.HintSize="434,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_15" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Utils\Utils_GetDictionayFromAnotherOne.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_dicLanguage">[in_dicLanguage]</InArgument>
                            <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="io_dicOutDictionary">[dicBotreadyDetail]</InOutArgument>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_dicDictionaryToFilterAndAppend">[io_dicTransactionData]</InArgument>
                            <InArgument x:TypeArguments="s:String[]" x:Key="in_arrToFilter">[in_Config("KeysOfTransactionDataToBotReadyDetail").ToString.Split(New String() {","}, StringSplitOptions.RemoveEmptyEntries).Select(Function(strItem) strItem.Trim).ToArray]</InArgument>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_dicKeysMap">[in_dicKeysMap]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <Assign DisplayName="initialize detail" sap:VirtualizedContainerService.HintSize="434,61" sap2010:WorkflowViewState.IdRef="Assign_50">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[io_dicBotReadyConfig("Detail")]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[in_Config("BotReadyDetail").ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:ForEach x:TypeArguments="x:String" CurrentIndex="[intIndex]" DisplayName="For Each - OrderedBotReadyExecutionKeys" sap:VirtualizedContainerService.HintSize="434,186" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[in_Config(&quot;OrderedBotReadyExecutionKeys&quot;).ToString.Split(&quot;,&quot;c).Select(Function(strItem) strItem.Trim).ToArray]">
                          <ui:ForEach.Body>
                            <ActivityAction x:TypeArguments="x:String">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="x:String" Name="strKey" />
                              </ActivityAction.Argument>
                              <Assign DisplayName="update excution detail" sap:VirtualizedContainerService.HintSize="262,61" sap2010:WorkflowViewState.IdRef="Assign_51">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Object">[io_dicBotReadyConfig("Detail")]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Object">[io_dicBotReadyConfig("Detail").ToString.Replace("{"+intIndex.ToString+"}",dicBotreadyDetail(if(in_dicKeysMap.ContainsKey(strKey),in_dicKeysMap(strKey).ToString,strKey)))]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </ActivityAction>
                          </ui:ForEach.Body>
                        </ui:ForEach>
                      </Sequence>
                      <FlowStep.Next>
                        <x:Reference>__ReferenceID1</x:Reference>
                      </FlowStep.Next>
                    </FlowStep>
                  </FlowStep.Next>
                </FlowStep>
                <x:Reference>__ReferenceID2</x:Reference>
                <x:Reference>__ReferenceID3</x:Reference>
                <FlowDecision x:Name="__ReferenceID6" Condition="[cint(io_dicBotReadyConfig(&quot;UseBotReady&quot;))=1 andalso not io_dicBotReadyConfig.ContainsKey(&quot;BotreadyError&quot;)]" DisplayName="use botready?" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_3">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <av:Point x:Key="ShapeLocation">480.5,127.66666666666666</av:Point>
                      <av:Size x:Key="ShapeSize">79,87</av:Size>
                      <av:PointCollection x:Key="TrueConnector">480.5,171.16666666666666 415.895,171.16666666666666 415.895,250</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <FlowDecision.True>
                    <FlowStep x:Name="__ReferenceID5" sap2010:WorkflowViewState.IdRef="FlowStep_1">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">198.895,250</av:Point>
                          <av:Size x:Key="ShapeSize">434,81</av:Size>
                          <av:PointCollection x:Key="ConnectorLocation">415.895,332 415.895,382</av:PointCollection>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign DisplayName="Assign - bIsError" sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_46">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">[bIsError]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean">[If(cBool(io_dicBotReadyConfig("BREAsSuccess")), io_exSystemError IsNot Nothing, io_exBRE IsNot Nothing Or io_exSystemError IsNot Nothing)]</InArgument>
                        </Assign.Value>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Assign>
                      <FlowStep.Next>
                        <x:Reference>__ReferenceID4</x:Reference>
                      </FlowStep.Next>
                    </FlowStep>
                  </FlowDecision.True>
                </FlowDecision>
                <x:Reference>__ReferenceID5</x:Reference>
                <x:Reference>__ReferenceID0</x:Reference>
              </Flowchart>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_7">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <If Condition="[cint(io_dicBotReadyConfig(&quot;IgnoreIfBotreadFails&quot;))=1]" DisplayName="throw botready exception?" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="If_6">
                    <If.Then>
                      <Sequence DisplayName="ignore error" sap:VirtualizedContainerService.HintSize="476,302" sap2010:WorkflowViewState.IdRef="Sequence_18">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:LogMessage DisplayName="Log Message ignore error" sap:VirtualizedContainerService.HintSize="434,92" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Warn" Message="[exception.Message]" />
                        <Assign DisplayName="set botready failed" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_39">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[io_dicBotReadyConfig("BotreadyError")]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[true]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Rethrow DisplayName="Rethrow ex" sap:VirtualizedContainerService.HintSize="334,25" sap2010:WorkflowViewState.IdRef="Rethrow_3" />
                    </If.Else>
                  </If>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
          <If Condition="[cint(in_Config(&quot;EnableInsightLog&quot;))=1]" DisplayName="insight log is enabled?" sap:VirtualizedContainerService.HintSize="468,262" sap2010:WorkflowViewState.IdRef="If_8">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsPinned">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence DisplayName="log insight" sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_19">
                <Sequence.Variables>
                  <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="dicInsight" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="get key values pair from transaction item" sap:VirtualizedContainerService.HintSize="353,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Utils\Utils_GetDictionayFromAnotherOne.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_dicLanguage">[in_dicLanguage]</InArgument>
                    <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="io_dicOutDictionary">[dicInsight]</InOutArgument>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_dicDictionaryToFilterAndAppend">[in_TransactionItem.SpecificContent]</InArgument>
                    <InArgument x:TypeArguments="s:String[]" x:Key="in_arrToFilter">[in_Config("KeysOfTransactionItemToInsight").ToString.Split(New String() {","}, StringSplitOptions.RemoveEmptyEntries).Select(Function(strItem) strItem.Trim).ToArray]</InArgument>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_dicKeysMap">[in_dicKeysMap]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeWorkflowFile>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="get key values pair from transaction data" sap:VirtualizedContainerService.HintSize="353,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Utils\Utils_GetDictionayFromAnotherOne.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_dicLanguage">[in_dicLanguage]</InArgument>
                    <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="io_dicOutDictionary">[dicInsight]</InOutArgument>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_dicDictionaryToFilterAndAppend">[io_dicTransactionData]</InArgument>
                    <InArgument x:TypeArguments="s:String[]" x:Key="in_arrToFilter">[in_Config("KeysOfTransactionDataToInsight").ToString.Split(New String() {","}, StringSplitOptions.RemoveEmptyEntries).Select(Function(strItem) strItem.Trim).ToArray]</InArgument>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_dicKeysMap">[in_dicKeysMap]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeWorkflowFile>
                <ui:LogMessage DisplayName="Log insight" sap:VirtualizedContainerService.HintSize="353,92" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Info" Message="[in_Config(&quot;InsightTAG&quot;).ToString + vbNewLine + JsonConvert.SerializeObject(dicInsight)]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:LogMessage>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence DisplayName="" sap2010:WorkflowViewState.IdRef="Sequence_26" />
            </If.Else>
          </If>
          <If Condition="[cint(in_Config(&quot;SendFinalEmail&quot;))=1]" DisplayName="send output?" sap:VirtualizedContainerService.HintSize="468,52" sap2010:WorkflowViewState.IdRef="If_5">
            <If.Then>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ExcelInputfwk_SaveOutputFile workflow" sap:VirtualizedContainerService.HintSize="334,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="fwk\fwk_SaveOutputFile.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                  <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                  <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="io_dicTransactionData">[io_dicTransactionData]</InOutArgument>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_dicLanguage">[in_dicLanguage]</InArgument>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_dicKeysMap">[in_dicKeysMap]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
            </If.Then>
          </If>
        </Sequence>
      </TryCatch.Finally>
    </TryCatch>
  </Sequence>
</Activity>